create or replace package SPACE_COPPIE_LINGUE is
  -- Author  : ISI
  -- Created : 04/06/2021 14:41:21
  -- Purpose : Comunicazione con la transazione di backoffice per la tabella CSC_COPPIE_LINGUE
PROCEDURE SEARCH(PAR_ANNOACC IN NUMBER,
                   PAR_CSC_COD IN VARCHAR2,
                   PAR_RESULT  OUT SYS_REFCURSOR);
PROCEDURE SAVE_COPPIA(PAR_ANNOACC IN NUMBER,
                        PAR_CSC_COD IN VARCHAR2,
                        PAR_LINGUA1 IN CHAR,
                        PAR_LINGUA2 IN CHAR);
PROCEDURE DELETE_COPPIA(PAR_ANNOACC IN NUMBER,
                          PAR_CSC_COD IN VARCHAR2,
                          PAR_LINGUA1 IN CHAR,
                          PAR_LINGUA2 IN CHAR);
PROCEDURE UPDATE_COPPIA(PAR_ANNOACC IN NUMBER,
                          PAR_CSC_COD IN VARCHAR2,
                          NEW_COD     IN VARCHAR2);
PROCEDURE LISTA_LINGUE(PAR_RESULT OUT SYS_REFCURSOR) ;
end SPACE_COPPIE_LINGUE;

-------------------------------------------body-------------------------------------------

create or replace package body SPACE_COPPIE_LINGUE IS
PROCEDURE SEARCH(PAR_ANNOACC IN NUMBER,
                   PAR_CSC_COD IN VARCHAR2,
                   PAR_RESULT  OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN PAR_RESULT FOR
      SELECT ANNOACC annoacc,
             UPPER(CSC_COD) csccod,
             UPPER(LINGUA_1) codlingua1,
             T1.T30_DES_LINGUA DESLINGUA1,
             UPPER(LINGUA_2) codlingua2,
             T2.T30_DES_LINGUA DESLINGUA2
        FROM T30 T1, T30 T2, CSC_COPPIE_LINGUE C
       WHERE T1.T30_COD_LINGUA = C.LINGUA_1
         AND T2.T30_COD_LINGUA = C.LINGUA_2
         AND C.ANNOACC = PAR_ANNOACC
         AND C.CSC_COD = NVL(PAR_CSC_COD, CSC_COD)
         ORDER BY CSC_COD ASC;
  END;

PROCEDURE SAVE_COPPIA(PAR_ANNOACC IN NUMBER,
                        PAR_CSC_COD IN VARCHAR2,
                        PAR_LINGUA1 IN CHAR,
                        PAR_LINGUA2 IN CHAR) IS
    V_COUNT NUMBER(5);
    E_LINGUE_INV EXCEPTION;
 BEGIN
SELECT COUNT(*)
      INTO V_COUNT
      FROM CSC_COPPIE_LINGUE C
     WHERE C.ANNOACC = PAR_ANNOACC
       AND C.CSC_COD = PAR_CSC_COD
       AND C.LINGUA_1 = PAR_LINGUA2
       AND C.LINGUA_2 = PAR_LINGUA1;
  
    IF V_COUNT > 0 THEN
      RAISE E_LINGUE_INV;
    END IF;
  
    INSERT INTO CSC_COPPIE_LINGUE
      (ANNOACC, CSC_COD, LINGUA_1, LINGUA_2)
    VALUES
      (PAR_ANNOACC,
       UPPER(PAR_CSC_COD),
       UPPER(PAR_LINGUA1),
       UPPER(PAR_LINGUA2));
  EXCEPTION
    WHEN E_LINGUE_INV THEN
      DBMS_OUTPUT.put_line('ERRORE GENERICO: ' || SQLCODE);
      RAISE_APPLICATION_ERROR(-20003,
                              'IMPOSSIBILE INSERIRE IL DATO. DATO GIA PRESENTE CON LINGUE INVERTITE. ');
    WHEN DUP_VAL_ON_INDEX THEN
      DBMS_OUTPUT.put_line('ERRORE GENERICO: ' || SQLCODE);
      RAISE_APPLICATION_ERROR(-20001,
                              'IMPOSSIBILE INSERIRE IL DATO. DATO GIA PRESENTE. ');
    WHEN OTHERS THEN
      DBMS_OUTPUT.put_line('ERRORE GENERICO: ' || SQLCODE);
      RAISE_APPLICATION_ERROR(-20002,
                              'IMPOSSIBILE INSERIRE IL DATO. SI PREGA DI VERIFICARE. ');
 END;

PROCEDURE DELETE_COPPIA(PAR_ANNOACC IN NUMBER,
                          PAR_CSC_COD IN VARCHAR2,
                          PAR_LINGUA1 IN CHAR,
                          PAR_LINGUA2 IN CHAR) IS
  BEGIN
    DELETE FROM CSC_COPPIE_LINGUE C
     WHERE C.ANNOACC = PAR_ANNOACC
       AND UPPER(C.CSC_COD) = UPPER(PAR_CSC_COD)
       AND UPPER(C.LINGUA_1) = UPPER(PAR_LINGUA1)
       AND UPPER(C.LINGUA_2) = UPPER(PAR_LINGUA2);
    NULL;
  END
   
PROCEDURE UPDATE_COPPIA(PAR_ANNOACC IN NUMBER,
                          PAR_CSC_COD IN VARCHAR2,
                          NEW_COD     IN VARCHAR2) IS
  BEGIN
    UPDATE CSC_COPPIE_LINGUE C
       SET C.CSC_COD = UPPER(NEW_COD)
     WHERE C.ANNOACC = PAR_ANNOACC
       AND UPPER(C.CSC_COD) = UPPER(PAR_CSC_COD);
    NULL;
  END;

PROCEDURE LISTA_LINGUE(PAR_RESULT OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN PAR_RESULT FOR
      SELECT T.T30_COD_LINGUA CODICE, T.T30_DES_LINGUA DESCRIZIONE
        FROM T30 T;
  END;
end SPACE_COPPIE_LINGUE;
